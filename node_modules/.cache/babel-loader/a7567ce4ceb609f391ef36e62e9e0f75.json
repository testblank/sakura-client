{"ast":null,"code":"import _defineProperty from \"/Users/testblank/Documents/heurm-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/testblank/Documents/heurm-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _objectSpread2;\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { createAction, handleActions } from \"redux-actions\";\nimport { Map } from \"immutable\";\nimport * as AuthAPI from \"lib/api/auth\";\nimport { pender } from \"redux-pender\";\nvar SET_LOGGED_INFO = \"user/SET_LOGGED_INFO\";\nvar SET_VALIDATED = \"user/SET_VALIDATED\";\nvar LOGOUT = \"user/LOGOUT\";\nvar CHECK_STATUS = \"user/CHECK_STATUS\";\nexport var setLoggedInfo = createAction(SET_LOGGED_INFO);\nexport var setValidated = createAction(SET_VALIDATED);\nexport var logout = createAction(LOGOUT, AuthAPI.logout);\nexport var checkStatus = createAction(CHECK_STATUS, AuthAPI.checkStatus);\nvar initialState = Map({\n  loggedInfo: Map({\n    thumbnail: null,\n    username: null\n  }),\n  logged: false,\n  validated: false\n});\n\nvar _default = handleActions(_objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, SET_LOGGED_INFO, function (state, action) {\n  return state.set(\"loggedInfo\", Map(action.payload)).set(\"logged\", true);\n}), _defineProperty(_objectSpread2, SET_VALIDATED, function (state, action) {\n  return state.set(\"validated\", action.payload);\n}), _objectSpread2), pender({\n  type: CHECK_STATUS,\n  onSuccess: function onSuccess(state, action) {\n    return state.set(\"loggedInfo\", Map(action.payload.data)).set(\"validated\", true);\n  },\n  onFailure: function onFailure(state, action) {\n    return initialState;\n  }\n})), initialState);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(SET_LOGGED_INFO, \"SET_LOGGED_INFO\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/user.js\");\n  reactHotLoader.register(SET_VALIDATED, \"SET_VALIDATED\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/user.js\");\n  reactHotLoader.register(LOGOUT, \"LOGOUT\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/user.js\");\n  reactHotLoader.register(CHECK_STATUS, \"CHECK_STATUS\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/user.js\");\n  reactHotLoader.register(setLoggedInfo, \"setLoggedInfo\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/user.js\");\n  reactHotLoader.register(setValidated, \"setValidated\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/user.js\");\n  reactHotLoader.register(logout, \"logout\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/user.js\");\n  reactHotLoader.register(checkStatus, \"checkStatus\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/user.js\");\n  reactHotLoader.register(initialState, \"initialState\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/user.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/user.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/Users/testblank/Documents/heurm-client/src/redux/modules/user.js"],"names":["createAction","handleActions","Map","AuthAPI","pender","SET_LOGGED_INFO","SET_VALIDATED","LOGOUT","CHECK_STATUS","setLoggedInfo","setValidated","logout","checkStatus","initialState","loggedInfo","thumbnail","username","logged","validated","state","action","set","payload","type","onSuccess","data","onFailure"],"mappings":";;;;;;;;;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,SAASC,GAAT,QAAoB,WAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,cAAzB;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,IAAMC,eAAe,GAAG,sBAAxB;AACA,IAAMC,aAAa,GAAG,oBAAtB;AACA,IAAMC,MAAM,GAAG,aAAf;AACA,IAAMC,YAAY,GAAG,mBAArB;AAEA,OAAO,IAAMC,aAAa,GAAGT,YAAY,CAACK,eAAD,CAAlC;AACP,OAAO,IAAMK,YAAY,GAAGV,YAAY,CAACM,aAAD,CAAjC;AACP,OAAO,IAAMK,MAAM,GAAGX,YAAY,CAACO,MAAD,EAASJ,OAAO,CAACQ,MAAjB,CAA3B;AACP,OAAO,IAAMC,WAAW,GAAGZ,YAAY,CAACQ,YAAD,EAAeL,OAAO,CAACS,WAAvB,CAAhC;AAEP,IAAMC,YAAY,GAAGX,GAAG,CAAC;AACvBY,EAAAA,UAAU,EAAEZ,GAAG,CAAC;AACda,IAAAA,SAAS,EAAE,IADG;AAEdC,IAAAA,QAAQ,EAAE;AAFI,GAAD,CADQ;AAKvBC,EAAAA,MAAM,EAAE,KALe;AAMvBC,EAAAA,SAAS,EAAE;AANY,CAAD,CAAxB;;eASejB,aAAa,qEAEvBI,eAFuB,EAEL,UAACc,KAAD,EAAQC,MAAR;AAAA,SACjBD,KAAK,CAACE,GAAN,CAAU,YAAV,EAAwBnB,GAAG,CAACkB,MAAM,CAACE,OAAR,CAA3B,EAA6CD,GAA7C,CAAiD,QAAjD,EAA2D,IAA3D,CADiB;AAAA,CAFK,mCAIvBf,aAJuB,EAIP,UAACa,KAAD,EAAQC,MAAR;AAAA,SAAmBD,KAAK,CAACE,GAAN,CAAU,WAAV,EAAuBD,MAAM,CAACE,OAA9B,CAAnB;AAAA,CAJO,oBAKrBlB,MAAM,CAAC;AACRmB,EAAAA,IAAI,EAAEf,YADE;AAERgB,EAAAA,SAAS,EAAE,mBAACL,KAAD,EAAQC,MAAR;AAAA,WACTD,KAAK,CACFE,GADH,CACO,YADP,EACqBnB,GAAG,CAACkB,MAAM,CAACE,OAAP,CAAeG,IAAhB,CADxB,EAEGJ,GAFH,CAEO,WAFP,EAEoB,IAFpB,CADS;AAAA,GAFH;AAMRK,EAAAA,SAAS,EAAE,mBAACP,KAAD,EAAQC,MAAR;AAAA,WAAmBP,YAAnB;AAAA;AANH,CAAD,CALe,GAc1BA,YAd0B,C;;AAA5B;;;;;;;;;;;;0BAnBMR,e;0BACAC,a;0BACAC,M;0BACAC,Y;0BAEOC,a;0BACAC,Y;0BACAC,M;0BACAC,W;0BAEPC,Y","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\n\nimport { Map } from \"immutable\";\nimport * as AuthAPI from \"lib/api/auth\";\nimport { pender } from \"redux-pender\";\n\nconst SET_LOGGED_INFO = \"user/SET_LOGGED_INFO\";\nconst SET_VALIDATED = \"user/SET_VALIDATED\";\nconst LOGOUT = \"user/LOGOUT\";\nconst CHECK_STATUS = \"user/CHECK_STATUS\";\n\nexport const setLoggedInfo = createAction(SET_LOGGED_INFO);\nexport const setValidated = createAction(SET_VALIDATED);\nexport const logout = createAction(LOGOUT, AuthAPI.logout);\nexport const checkStatus = createAction(CHECK_STATUS, AuthAPI.checkStatus);\n\nconst initialState = Map({\n  loggedInfo: Map({\n    thumbnail: null,\n    username: null\n  }),\n  logged: false,\n  validated: false\n});\n\nexport default handleActions(\n  {\n    [SET_LOGGED_INFO]: (state, action) =>\n      state.set(\"loggedInfo\", Map(action.payload)).set(\"logged\", true),\n    [SET_VALIDATED]: (state, action) => state.set(\"validated\", action.payload),\n    ...pender({\n      type: CHECK_STATUS,\n      onSuccess: (state, action) =>\n        state\n          .set(\"loggedInfo\", Map(action.payload.data))\n          .set(\"validated\", true),\n      onFailure: (state, action) => initialState\n    })\n  },\n  initialState\n);\n"]},"metadata":{},"sourceType":"module"}