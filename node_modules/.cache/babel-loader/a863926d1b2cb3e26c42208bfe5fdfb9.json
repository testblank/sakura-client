{"ast":null,"code":"import _regeneratorRuntime from \"/Users/testblank/Documents/sakura-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/testblank/Documents/sakura-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/testblank/Documents/sakura-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/testblank/Documents/sakura-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/testblank/Documents/sakura-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/testblank/Documents/sakura-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/testblank/Documents/sakura-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/testblank/Documents/sakura-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/testblank/Documents/sakura-client/src/containers/Auth/Register.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component } from \"react\";\nimport { AuthContent, InputWithLabel, AuthButton, RightAlignedLink, AuthError } from \"components/Auth\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as authActions from \"redux/modules/auth\";\nimport * as userActions from \"redux/modules/user\";\nimport { isEmail, isLength, isAlphanumeric } from \"validator\";\nimport debounce from \"lodash/debounce\";\nimport storage from \"lib/storage\";\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.setError = function (message) {\n      var AuthActions = _this.props.AuthActions;\n      AuthActions.setError({\n        form: \"register\",\n        message: message\n      });\n    };\n\n    _this.validate = {\n      email: function email(value) {\n        if (!isEmail(value)) {\n          _this.setError(\"email address in invalied format \");\n\n          return false;\n        }\n\n        return true;\n      },\n      username: function username(value) {\n        if (!isAlphanumeric(value) || !isLength(value, {\n          min: 4,\n          max: 15\n        })) {\n          _this.setError(\"id must be 4 to 15 letters or numbers\");\n\n          return false;\n        }\n\n        return true;\n      },\n      password: function password(value) {\n        if (!isLength(value, {\n          min: 6\n        })) {\n          _this.setError(\"password must be at least 6 characters long\");\n\n          return false;\n        }\n\n        _this.setError(null);\n\n        return true;\n      },\n      passwordConfirm: function passwordConfirm(value) {\n        if (_this.props.form.get(\"password\") !== value) {\n          _this.setError(\"password and confirmation password do not match\");\n\n          return false;\n        }\n\n        _this.setError(null);\n\n        return true;\n      }\n    };\n    _this.checkEmailExists = debounce(\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(email) {\n        var AuthActions;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                AuthActions = _this.props.AuthActions;\n                _context.prev = 1;\n                _context.next = 4;\n                return AuthActions.checkEmailExists(email);\n\n              case 4:\n                if (_this.props.exists.get(\"email\")) {\n                  _this.setError(\"this email is already in use\");\n                } else {\n                  _this.setError(null);\n                }\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(), 300);\n    _this.checkUsernameExists = debounce(\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(username) {\n        var AuthActions;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                AuthActions = _this.props.AuthActions;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return AuthActions.checkUsernameExists(username);\n\n              case 4:\n                if (_this.props.exists.get(\"username\")) {\n                  _this.setError(\"this id is already in use\");\n                } else {\n                  _this.setError(null);\n                }\n\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(), 300);\n\n    _this.handleChange = function (e) {\n      var AuthActions = _this.props.AuthActions;\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      AuthActions.changeInput({\n        name: name,\n        value: value,\n        form: \"register\"\n      });\n\n      var validation = _this.validate[name](value);\n\n      if (name.indexOf(\"password\") > -1 || !validation) {\n        return;\n      }\n\n      var check = name === \"email\" ? _this.checkEmailExists : _this.checkUsernameExists;\n      check(value);\n    };\n\n    _this.handleLocalRegister =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var _this$props, form, AuthActions, error, history, UserActions, _form$toJS, email, username, password, passwordConfirm, _assertThisInitialize, validate, loggedInfo, key, message;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$props = _this.props, form = _this$props.form, AuthActions = _this$props.AuthActions, error = _this$props.error, history = _this$props.history, UserActions = _this$props.UserActions;\n              _form$toJS = form.toJS(), email = _form$toJS.email, username = _form$toJS.username, password = _form$toJS.password, passwordConfirm = _form$toJS.passwordConfirm;\n              _assertThisInitialize = _assertThisInitialized(_this), validate = _assertThisInitialize.validate;\n\n              if (!error) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 5:\n              if (!(!validate[\"email\"](email) || !validate[\"username\"](username) || !validate[\"password\"](password) || !validate[\"passwordConfirm\"](passwordConfirm))) {\n                _context3.next = 7;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 7:\n              _context3.prev = 7;\n              _context3.next = 10;\n              return AuthActions.localRegister({\n                email: email,\n                username: username,\n                password: password\n              });\n\n            case 10:\n              loggedInfo = _this.props.result.toJS();\n              console.log('1111');\n              console.log(_this.props.toJS());\n              storage.set(\"loggedInfo\", loggedInfo);\n              UserActions.setLoggedInfo(loggedInfo);\n              UserActions.setValidated(true);\n              history.push(\"/\"); //가입 성공시 홈으로\n\n              _context3.next = 26;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](7);\n\n              if (!(_context3.t0.response.status === 409)) {\n                _context3.next = 25;\n                break;\n              }\n\n              key = _context3.t0.response.data.key;\n              message = key === \"email\" ? \"this email is already in use\" : \"this id is already in use\";\n              return _context3.abrupt(\"return\", _this.setError(message));\n\n            case 25:\n              _this.setError(\"unknown error occurred\");\n\n            case 26:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[7, 19]]);\n    }));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var AuthActions = this.props.AuthActions;\n      AuthActions.initializeForm(\"register\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$form$toJS = this.props.form.toJS(),\n          email = _this$props$form$toJS.email,\n          username = _this$props$form$toJS.username,\n          password = _this$props$form$toJS.password,\n          passwordConfirm = _this$props$form$toJS.passwordConfirm;\n\n      var handleChange = this.handleChange,\n          handleLocalRegister = this.handleLocalRegister;\n      var error = this.props.error;\n      return React.createElement(AuthContent, {\n        title: \"signIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(InputWithLabel, {\n        onChange: handleChange,\n        value: email,\n        label: \"email\",\n        name: \"email\",\n        placeholder: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(InputWithLabel, {\n        onChange: handleChange,\n        value: username,\n        label: \"id\",\n        name: \"username\",\n        placeholder: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(InputWithLabel, {\n        onChange: handleChange,\n        value: password,\n        label: \"password\",\n        name: \"password\",\n        placeholder: \"password\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(InputWithLabel, {\n        onChange: handleChange,\n        value: passwordConfirm,\n        label: \"passwordConfirm\",\n        name: \"passwordConfirm\",\n        placeholder: \"passwordConfirm\",\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), error && React.createElement(AuthError, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, error), React.createElement(RightAlignedLink, {\n        to: \"/auth/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"backTologIn\"), React.createElement(AuthButton, {\n        onClick: handleLocalRegister,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"signIn\"));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nvar _default = connect(function (state) {\n  return {\n    form: state.auth.getIn([\"register\", \"form\"]),\n    error: state.auth.getIn([\"register\", \"error\"]),\n    exists: state.auth.getIn([\"register\", \"exists\"]),\n    result: state.auth.get(\"result\")\n  };\n}, function (dispatch) {\n  return {\n    AuthActions: bindActionCreators(authActions, dispatch),\n    UserActions: bindActionCreators(userActions, dispatch)\n  };\n})(Register);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Register, \"Register\", \"/Users/testblank/Documents/sakura-client/src/containers/Auth/Register.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/testblank/Documents/sakura-client/src/containers/Auth/Register.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/Users/testblank/Documents/sakura-client/src/containers/Auth/Register.js"],"names":["React","Component","AuthContent","InputWithLabel","AuthButton","RightAlignedLink","AuthError","connect","bindActionCreators","authActions","userActions","isEmail","isLength","isAlphanumeric","debounce","storage","Register","setError","message","AuthActions","props","form","validate","email","value","username","min","max","password","passwordConfirm","get","checkEmailExists","exists","console","log","checkUsernameExists","handleChange","e","target","name","changeInput","validation","indexOf","check","handleLocalRegister","error","history","UserActions","toJS","localRegister","loggedInfo","result","set","setLoggedInfo","setValidated","push","response","status","key","data","initializeForm","state","auth","getIn","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  AuthContent,\n  InputWithLabel,\n  AuthButton,\n  RightAlignedLink,\n  AuthError\n} from \"components/Auth\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as authActions from \"redux/modules/auth\";\nimport * as userActions from \"redux/modules/user\";\nimport { isEmail, isLength, isAlphanumeric } from \"validator\";\nimport debounce from \"lodash/debounce\";\nimport storage from \"lib/storage\";\n\nclass Register extends Component {\n  setError = message => {\n    const { AuthActions } = this.props;\n    AuthActions.setError({\n      form: \"register\",\n      message\n    });\n  };\n  validate = {\n    email: value => {\n      if (!isEmail(value)) {\n        this.setError(\"email address in invalied format \");\n        return false;\n      }\n      return true;\n    },\n    username: value => {\n      if (!isAlphanumeric(value) || !isLength(value, { min: 4, max: 15 })) {\n        this.setError(\"id must be 4 to 15 letters or numbers\");\n        return false;\n      }\n      return true;\n    },\n    password: value => {\n      if (!isLength(value, { min: 6 })) {\n        this.setError(\"password must be at least 6 characters long\");\n        return false;\n      }\n      this.setError(null);\n      return true;\n    },\n    passwordConfirm: value => {\n      if (this.props.form.get(\"password\") !== value) {\n        this.setError(\"password and confirmation password do not match\");\n        return false;\n      }\n      this.setError(null);\n      return true;\n    }\n  };\n  checkEmailExists = debounce(async email => {\n    const { AuthActions } = this.props;\n    try {\n      await AuthActions.checkEmailExists(email);\n      if (this.props.exists.get(\"email\")) {\n        this.setError(\"this email is already in use\");\n      } else {\n        this.setError(null);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, 300);\n  checkUsernameExists = debounce(async username => {\n    const { AuthActions } = this.props;\n    try {\n      await AuthActions.checkUsernameExists(username);\n      if (this.props.exists.get(\"username\")) {\n        this.setError(\"this id is already in use\");\n      } else {\n        this.setError(null);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, 300);\n  handleChange = e => {\n    const { AuthActions } = this.props;\n    const { name, value } = e.target;\n\n    AuthActions.changeInput({\n      name,\n      value,\n      form: \"register\"\n    });\n\n    const validation = this.validate[name](value);\n    if (name.indexOf(\"password\") > -1 || !validation) {\n      return;\n    }\n\n    const check =\n      name === \"email\" ? this.checkEmailExists : this.checkUsernameExists;\n    check(value);\n  };\n  handleLocalRegister = async () => {\n    const { form, AuthActions, error, history, UserActions } = this.props;\n    const { email, username, password, passwordConfirm } = form.toJS();\n\n    const { validate } = this;\n\n    if (error) {\n      return;\n    }\n    if (\n      !validate[\"email\"](email) ||\n      !validate[\"username\"](username) ||\n      !validate[\"password\"](password) ||\n      !validate[\"passwordConfirm\"](passwordConfirm)\n    ) {\n      return;\n    }\n    try {\n      await AuthActions.localRegister({\n        email,\n        username,\n        password\n      });\n      const loggedInfo = this.props.result.toJS();\n      console.log('1111')\n      console.log(this.props.toJS());\n\n      storage.set(\"loggedInfo\", loggedInfo);\n      UserActions.setLoggedInfo(loggedInfo);\n      UserActions.setValidated(true);\n      history.push(\"/\"); //가입 성공시 홈으로\n    } catch (error) {\n      if (error.response.status === 409) {\n        const { key } = error.response.data;\n        const message =\n          key === \"email\"\n            ? \"this email is already in use\"\n            : \"this id is already in use\";\n        return this.setError(message);\n      }\n      this.setError(\"unknown error occurred\");\n    }\n  };\n  componentWillUnmount() {\n    const { AuthActions } = this.props;\n    AuthActions.initializeForm(\"register\");\n  }\n\n  render() {\n    const {\n      email,\n      username,\n      password,\n      passwordConfirm\n    } = this.props.form.toJS();\n    const { handleChange, handleLocalRegister } = this;\n    const { error } = this.props;\n    return (\n      <AuthContent title=\"signIn\">\n        <InputWithLabel\n          onChange={handleChange}\n          value={email}\n          label=\"email\"\n          name=\"email\"\n          placeholder=\"email\"\n        />\n        <InputWithLabel\n          onChange={handleChange}\n          value={username}\n          label=\"id\"\n          name=\"username\"\n          placeholder=\"id\"\n        />\n        <InputWithLabel\n          onChange={handleChange}\n          value={password}\n          label=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          type=\"password\"\n        />\n        <InputWithLabel\n          onChange={handleChange}\n          value={passwordConfirm}\n          label=\"passwordConfirm\"\n          name=\"passwordConfirm\"\n          placeholder=\"passwordConfirm\"\n          type=\"password\"\n        />\n        {error && <AuthError>{error}</AuthError>}\n        <RightAlignedLink to=\"/auth/login\">backTologIn</RightAlignedLink>\n        <AuthButton onClick={handleLocalRegister}>signIn</AuthButton>\n      </AuthContent>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    form: state.auth.getIn([\"register\", \"form\"]),\n    error: state.auth.getIn([\"register\", \"error\"]),\n    exists: state.auth.getIn([\"register\", \"exists\"]),\n    result: state.auth.get(\"result\")\n  }),\n  dispatch => ({\n    AuthActions: bindActionCreators(authActions, dispatch),\n    UserActions: bindActionCreators(userActions, dispatch)\n  })\n)(Register);\n"]},"metadata":{},"sourceType":"module"}