{"ast":null,"code":"(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nvar storage = {\n  set: function set(key, object) {\n    if (!localStorage) {\n      return;\n    }\n\n    localStorage[key] = typeof object === 'string' ? object : JSON.stringify(object);\n  },\n  get: function get(key) {\n    if (!localStorage) {\n      return null;\n    }\n\n    if (!localStorage[key]) {\n      return null;\n    }\n\n    try {\n      var parsed = JSON.parse(localStorage[key]);\n      return parsed;\n    } catch (error) {\n      return localStorage[key];\n    }\n  },\n  remove: function remove(key) {\n    if (!localStorage) {\n      return null;\n    }\n\n    if (localStorage[key]) {\n      localStorage.removeItem(key);\n    }\n  }\n};\nvar _default = storage;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(storage, \"storage\", \"/Users/testblank/Documents/heurm-client/src/lib/storage.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/testblank/Documents/heurm-client/src/lib/storage.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/Users/testblank/Documents/heurm-client/src/lib/storage.js"],"names":["storage","set","key","object","localStorage","JSON","stringify","get","parsed","parse","error","remove","removeItem"],"mappings":";;;;;;AAAA,IAAMA,OAAO,GAAG;AACdC,EAAAA,GAAG,EAAE,aAACC,GAAD,EAAMC,MAAN,EAAiB;AACpB,QAAI,CAACC,YAAL,EAAmB;AACjB;AACD;;AACDA,IAAAA,YAAY,CAACF,GAAD,CAAZ,GAAqB,OAAOC,MAAR,KAAoB,QAApB,GAA+BA,MAA/B,GAAwCE,IAAI,CAACC,SAAL,CAAeH,MAAf,CAA5D;AACD,GANa;AAOdI,EAAAA,GAAG,EAAE,aAACL,GAAD,EAAS;AACZ,QAAI,CAACE,YAAL,EAAmB;AACjB,aAAO,IAAP;AACD;;AACD,QAAI,CAACA,YAAY,CAACF,GAAD,CAAjB,EAAwB;AACtB,aAAO,IAAP;AACD;;AACD,QAAI;AACF,UAAMM,MAAM,GAAGH,IAAI,CAACI,KAAL,CAAWL,YAAY,CAACF,GAAD,CAAvB,CAAf;AACA,aAAOM,MAAP;AACD,KAHD,CAGE,OAAOE,KAAP,EAAc;AACd,aAAON,YAAY,CAACF,GAAD,CAAnB;AACD;AACF,GApBa;AAqBdS,EAAAA,MAAM,EAAE,gBAACT,GAAD,EAAS;AACf,QAAI,CAACE,YAAL,EAAmB;AACjB,aAAO,IAAP;AACD;;AACD,QAAIA,YAAY,CAACF,GAAD,CAAhB,EAAuB;AACrBE,MAAAA,YAAY,CAACQ,UAAb,CAAwBV,GAAxB;AACD;AACF;AA5Ba,CAAhB;eA+BeF,O;AAAf;;;;;;;;;;;;0BA/BMA,O","sourcesContent":["const storage = {\n  set: (key, object) => {\n    if (!localStorage) {\n      return;\n    }\n    localStorage[key] = (typeof object) === 'string' ? object : JSON.stringify(object)\n  },\n  get: (key) => {\n    if (!localStorage) {\n      return null;\n    }\n    if (!localStorage[key]) {\n      return null;\n    }\n    try {\n      const parsed = JSON.parse(localStorage[key]);\n      return parsed;\n    } catch (error) {\n      return localStorage[key];\n    }\n  },\n  remove: (key) => {\n    if (!localStorage) {\n      return null;\n    }\n    if (localStorage[key]) {\n      localStorage.removeItem(key);\n    }\n  }\n}\n\nexport default storage;\n"]},"metadata":{},"sourceType":"module"}