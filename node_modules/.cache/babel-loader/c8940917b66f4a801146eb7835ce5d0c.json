{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Base = require('../Base');\n\nvar _Base2 = _interopRequireDefault(_Base);\n\nvar _lodash = require('lodash');\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _util = require('../util');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar defaultSize = 22;\n\nvar Wave = function Wave(_ref, _ref2) {\n  var _ref2$betterReactSpin = _ref2.betterReactSpinkit,\n      betterReactSpinkit = _ref2$betterReactSpin === undefined ? {} : _ref2$betterReactSpin;\n\n  var color = _ref.color,\n      columns = _ref.columns,\n      columnWidth = _ref.columnWidth,\n      gutterWidth = _ref.gutterWidth,\n      reverse = _ref.reverse,\n      scaleYEnd = _ref.scaleYEnd,\n      scaleYStart = _ref.scaleYStart,\n      size = _ref.size,\n      props = _objectWithoutProperties(_ref, ['color', 'columns', 'columnWidth', 'gutterWidth', 'reverse', 'scaleYEnd', 'scaleYStart', 'size']);\n\n  var name = (0, _util.animationName)('wave');\n  var finalSize = (0, _util.preside)(size, betterReactSpinkit.size, defaultSize);\n  var outer = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    height: finalSize - finalSize * 0.2,\n    width: finalSize\n  };\n\n  var column = _extends({}, (0, _util.animate)({\n    name: name\n  }), {\n    backgroundColor: color || betterReactSpinkit.color || _util.defaults.color,\n    height: '100%',\n    width: columnWidth\n  });\n\n  var cols = reverse ? (0, _lodash.range)(columns).reverse() : (0, _lodash.range)(columns);\n  return _react2.default.createElement(_Base2.default, _extends({\n    css: '\\n        @-webkit-keyframes ' + name + ' {\\n          0%, 40%, 100% {\\n            -webkit-transform: scaleY(' + scaleYStart + ')\\n          }\\n          20% {\\n            -webkit-transform: scaleY(' + scaleYEnd + ')\\n          }\\n        }\\n        @keyframes ' + name + ' {\\n          0%, 40%, 100% {\\n            transform: scaleY(' + scaleYStart + ');\\n            -webkit-transform: scaleY(' + scaleYStart + ');\\n          }\\n          20% {\\n            transform: scaleY(' + scaleYEnd + ');\\n            -webkit-transform: scaleY(' + scaleYEnd + ');\\n          }\\n        }\\n      '\n  }, props), _react2.default.createElement('div', {\n    style: outer\n  }, cols.map(function (index) {\n    return _react2.default.createElement('div', {\n      key: index,\n      style: _extends({}, column, (0, _util.animate)({\n        delay: '-' + index / 10 + 's'\n      }), {\n        marginRight: index !== columns ? gutterWidth : 0\n      })\n    });\n  })));\n};\n\nWave.propTypes = {\n  /**\n   * The color of the spinner.\n   */\n  color: _propTypes2.default.string,\n\n  /**\n   * The amount of columns.\n   */\n  columns: _propTypes2.default.number,\n\n  /**\n   * The width of each column.\n   */\n  columnWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\n  /**\n   * The pixel value between columns.\n   */\n  gutterWidth: _propTypes2.default.number,\n\n  /**\n   * Reverse the animation.\n   */\n  reverse: _propTypes2.default.bool,\n\n  /**\n   * Ending column height.\n   */\n  scaleYEnd: _propTypes2.default.number,\n\n  /**\n   * Starting column height.\n   */\n  scaleYStart: _propTypes2.default.number,\n\n  /**\n   * The size of the spinner.\n   */\n  size: _propTypes2.default.number\n};\nWave.defaultProps = {\n  columns: 5,\n  columnWidth: '20%',\n  gutterWidth: 1,\n  reverse: false,\n  scaleYEnd: 1,\n  scaleYStart: 0.4,\n  size: defaultSize\n};\nWave.contextTypes = _util.defaults.contextTypes;\nexports.default = Wave;","map":null,"metadata":{},"sourceType":"script"}