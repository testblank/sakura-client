{"ast":null,"code":"import _defineProperty from \"/Users/testblank/Documents/heurm-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/testblank/Documents/heurm-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _objectSpread2;\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport { createAction, handleActions } from \"redux-actions\";\nimport { pender } from \"redux-pender\";\nimport * as AuthAPI from \"lib/api/auth\";\nimport { Map } from \"immutable\";\nvar CHANGE_INPUT = \"auth/CHANGE_INPUT\";\nvar INITIALIZE_FORM = \"auth/INITIALIZE_FORM\";\nvar CHECK_EMAIL_EXISTS = \"auth/CHECK_EMAIL_EXISTS\";\nvar CHECK_USERNAME_EXISTS = \"auth/CHECK_USERNAME_EXISTS\";\nvar LOCAL_REGISTER = \"auth/LOCAL_REGISTER\";\nvar LOCAL_LOGIN = \"auth/LOCAL_LOGIN\";\nvar LOGOUT = \"auth/LOGOUT\";\nvar SET_ERROR = \"auth/SET_ERROR\";\nexport var changeInput = createAction(CHANGE_INPUT); // {form, name, value}\n\nexport var initializeForm = createAction(INITIALIZE_FORM);\nexport var checkEmailExists = createAction(CHECK_EMAIL_EXISTS, AuthAPI.checkEmailExists);\nexport var checkUsernameExists = createAction(CHECK_USERNAME_EXISTS, AuthAPI.checkUsernameExists);\nexport var localRegister = createAction(LOCAL_REGISTER, AuthAPI.localRegister);\nexport var localLogin = createAction(LOCAL_LOGIN, AuthAPI.localLogin);\nexport var logout = createAction(LOGOUT, AuthAPI.logout);\nexport var setError = createAction(SET_ERROR); // {form,message}\n\nvar initialState = Map({\n  register: Map({\n    form: Map({\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      passwordConfirm: \"\"\n    }),\n    exists: Map({\n      email: false,\n      password: false\n    }),\n    error: null\n  }),\n  login: Map({\n    form: Map({\n      email: \"\",\n      password: \"\"\n    }),\n    error: null\n  }),\n  result: Map({})\n}); // reducer\n\nvar _default = handleActions(_objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, CHANGE_INPUT, function (state, action) {\n  var _action$payload = action.payload,\n      form = _action$payload.form,\n      value = _action$payload.value,\n      name = _action$payload.name;\n  return state.setIn([form, \"form\", name], value);\n}), _defineProperty(_objectSpread2, INITIALIZE_FORM, function (state, action) {\n  var initialForm = initialState.get(action.payload);\n  return state.set(action.payload, initialForm);\n}), _objectSpread2), pender({\n  type: CHECK_EMAIL_EXISTS,\n  onSuccess: function onSuccess(state, action) {\n    return state.setIn([\"register\", \"exists\", \"email\"], action.payload.data.exists);\n  }\n}), pender({\n  type: CHECK_USERNAME_EXISTS,\n  onSuccess: function onSuccess(state, action) {\n    return state.setIn([\"register\", \"exists\", \"username\"], action.payload.data.exists);\n  }\n}), pender({\n  type: LOCAL_LOGIN,\n  onSuccess: function onSuccess(state, action) {\n    return state.set(\"result\", Map(action.payload.data));\n  }\n}), pender({\n  type: LOCAL_REGISTER,\n  onSuccess: function onSuccess(state, action) {\n    return state.set(\"result\", Map(action.payload.data));\n  }\n}), _defineProperty({}, SET_ERROR, function (state, action) {\n  var _action$payload2 = action.payload,\n      form = _action$payload2.form,\n      message = _action$payload2.message;\n  return state.setIn([form, \"error\"], message);\n})), initialState);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(CHANGE_INPUT, \"CHANGE_INPUT\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(INITIALIZE_FORM, \"INITIALIZE_FORM\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(CHECK_EMAIL_EXISTS, \"CHECK_EMAIL_EXISTS\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(CHECK_USERNAME_EXISTS, \"CHECK_USERNAME_EXISTS\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(LOCAL_REGISTER, \"LOCAL_REGISTER\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(LOCAL_LOGIN, \"LOCAL_LOGIN\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(LOGOUT, \"LOGOUT\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(SET_ERROR, \"SET_ERROR\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(changeInput, \"changeInput\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(initializeForm, \"initializeForm\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(checkEmailExists, \"checkEmailExists\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(checkUsernameExists, \"checkUsernameExists\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(localRegister, \"localRegister\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(localLogin, \"localLogin\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(logout, \"logout\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(setError, \"setError\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(initialState, \"initialState\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js\");\n  leaveModule(module);\n})();\n\n;","map":{"version":3,"sources":["/Users/testblank/Documents/heurm-client/src/redux/modules/auth.js"],"names":["createAction","handleActions","pender","AuthAPI","Map","CHANGE_INPUT","INITIALIZE_FORM","CHECK_EMAIL_EXISTS","CHECK_USERNAME_EXISTS","LOCAL_REGISTER","LOCAL_LOGIN","LOGOUT","SET_ERROR","changeInput","initializeForm","checkEmailExists","checkUsernameExists","localRegister","localLogin","logout","setError","initialState","register","form","email","username","password","passwordConfirm","exists","error","login","result","state","action","payload","value","name","setIn","initialForm","get","set","type","onSuccess","data","message"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { pender } from \"redux-pender\";\nimport * as AuthAPI from \"lib/api/auth\";\nimport { Map } from \"immutable\";\n\nconst CHANGE_INPUT = \"auth/CHANGE_INPUT\";\nconst INITIALIZE_FORM = \"auth/INITIALIZE_FORM\";\nconst CHECK_EMAIL_EXISTS = \"auth/CHECK_EMAIL_EXISTS\";\nconst CHECK_USERNAME_EXISTS = \"auth/CHECK_USERNAME_EXISTS\";\nconst LOCAL_REGISTER = \"auth/LOCAL_REGISTER\";\nconst LOCAL_LOGIN = \"auth/LOCAL_LOGIN\";\nconst LOGOUT = \"auth/LOGOUT\";\nconst SET_ERROR = \"auth/SET_ERROR\";\n\nexport const changeInput = createAction(CHANGE_INPUT); // {form, name, value}\nexport const initializeForm = createAction(INITIALIZE_FORM);\nexport const checkEmailExists = createAction(\n  CHECK_EMAIL_EXISTS,\n  AuthAPI.checkEmailExists\n);\nexport const checkUsernameExists = createAction(\n  CHECK_USERNAME_EXISTS,\n  AuthAPI.checkUsernameExists\n);\nexport const localRegister = createAction(\n  LOCAL_REGISTER,\n  AuthAPI.localRegister\n);\nexport const localLogin = createAction(LOCAL_LOGIN, AuthAPI.localLogin);\nexport const logout = createAction(LOGOUT, AuthAPI.logout);\nexport const setError = createAction(SET_ERROR); // {form,message}\n\nconst initialState = Map({\n  register: Map({\n    form: Map({\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      passwordConfirm: \"\"\n    }),\n    exists: Map({\n      email: false,\n      password: false\n    }),\n    error: null\n  }),\n  login: Map({\n    form: Map({\n      email: \"\",\n      password: \"\"\n    }),\n    error: null\n  }),\n  result: Map({})\n});\n\n// reducer\nexport default handleActions(\n  {\n    [CHANGE_INPUT]: (state, action) => {\n      const { form, value, name } = action.payload;\n      return state.setIn([form, \"form\", name], value);\n    },\n    [INITIALIZE_FORM]: (state, action) => {\n      const initialForm = initialState.get(action.payload);\n      return state.set(action.payload, initialForm);\n    },\n    ...pender({\n      type: CHECK_EMAIL_EXISTS,\n      onSuccess: (state, action) =>\n        state.setIn([\"register\", \"exists\", \"email\"], action.payload.data.exists)\n    }),\n    ...pender({\n      type: CHECK_USERNAME_EXISTS,\n      onSuccess: (state, action) =>\n        state.setIn(\n          [\"register\", \"exists\", \"username\"],\n          action.payload.data.exists\n        )\n    }),\n    ...pender({\n      type: LOCAL_LOGIN,\n      onSuccess: (state, action) => state.set(\"result\", Map(action.payload.data))\n    }),\n    ...pender({\n      type: LOCAL_REGISTER,\n      onSuccess: (state, action) => state.set(\"result\", Map(action.payload.data))\n    }),\n    [SET_ERROR]: (state, action) => {\n      const { form, message } = action.payload;\n      return state.setIn([form, \"error\"], message);\n    }\n  },\n  initialState\n);\n"]},"metadata":{},"sourceType":"module"}